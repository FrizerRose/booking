.o-background-wrap {
  position: relative;
  z-index: 0;

  &.-is-input {
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: inset 0 0 0 0.125em transparent;
    transition: box-shadow $speed $easing;
    transition-delay: $speed * 1.5;
    background-color: $element-bg;

    html.mode-dark & {
      $site-button-bg: $mode-dark_element-bg;
      background-color: $site-button-bg;
    }

    &.-is-checkbox {
      height: 100%;
      border-radius: 0.25em;
    }
  }

  &.-is-dialog {
    @extend .c-form_font;

    border-radius: 0.5rem;
    overflow: hidden;
    color: $white;

    // @media (max-width: $to-medium) {
    //   padding: 1rem;
    // }
    // @media (min-width: $from-medium) {
    //   padding: 2rem;
    // }
  }

  .c-form_item.has-error & {
    border-color: $red;
  }
}

.o-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;

  &.-theme-color {
    html.orchid & {
      color: orchid;
    }
    html.goldenrod & {
      color: goldenrod;
    }
    html.coral & {
      color: coral;
    }
  }

  &.-has-bg {
    $theme-element-bg: white;
    background-color: $theme-element-bg;

    &.-emphasis {
      opacity: 0.1;
      background-color: currentColor;
    }

    html.mode-dark & {
      $theme-element-bg: $black;
      background-color: $theme-element-bg;
    
      &.-emphasis {
        background-color: currentColor;
      }
    }
  }

  &.-has-bg\@to-medium {
    @media (max-width: $to-medium) {
      $theme-element-bg: white;
      background-color: $theme-element-bg;

      html.mode-dark & {
        $theme-element-bg: $black;
        background-color: $theme-element-bg;
      }
    }
  }

  &.-has-bg\@from-medium {
    @media (min-width: $from-medium) {
      $theme-element-bg: white;
      background-color: $theme-element-bg;

      html.mode-dark & {
        $theme-element-bg: $black;
        background-color: $theme-element-bg;
      }
    }
  }

  // &.-has-gradient {
  //   background-image: linear-gradient(90deg, orchid, dodgerblue);
  //   background-size: 400%;
  // }

  &.-has-shadow {
    // for $shadow spread radius is -2em. this means element using .-has-shadow class has to have a height of 4em or more for shadow to show up.
    box-shadow: $shadow;

    html.mode-dark & {
      // if needed, you can change the box-shadow color here
      $currentColor: $mode-dark-main;
      color: $currentColor;
    }
  }

  &.-has-shadow\@to-medium {
    @media (max-width: $to-medium) {
      box-shadow: $shadow;

      html.mode-dark & {
        $currentColor: $mode-dark-main;
        color: $currentColor;
      }
    }
  }

  &.-has-shadow\@from-medium {
    @media (min-width: $from-medium) {
      box-shadow: $shadow;

      html.mode-dark & {
        $currentColor: $mode-dark-main;
        color: $currentColor;
      }
    }
  }

  &.-has-shadow-v2 {
    box-shadow: $shadow-v2;

    html.mode-dark & {
      $currentColor: $mode-dark-main;
      color: $currentColor;
    }
  }

  &.-has-border {
    box-shadow: inset 0 0 0 2px currentColor;
    opacity: 0;
    //
    html.display-borders & {
      opacity: 0.2;
    }
    &.-emphasis {
      opacity: 0;
      html.display-borders & {
        opacity: 1;
      }
    }

    html.mode-dark & {
      $currentColor: $mode-dark-main;
      box-shadow: inset 0 0 0 2px currentColor;
      //
      opacity: 0;
      html.display-borders & {
        opacity: 0.2;
      }
      &.-emphasis {
        opacity: 0;
        html.display-borders & {
          opacity: 1;
        }
      }
    }
  }

  &.-has-border\@to-medium {
    @media (max-width: $to-medium) {
      box-shadow: inset 0 0 0 2px currentColor;
      opacity: 0;
      //
      html.display-borders & {
        opacity: 0.2;
      }

      html.mode-dark & {
        $currentColor: $mode-dark-main;
        box-shadow: inset 0 0 0 2px currentColor;
        opacity: 0;
        //
        html.display-borders & {
          opacity: 0.2;
        }
      }
    }
  }

  &.-has-border\@from-medium {
    @media (min-width: $from-medium) {
      box-shadow: inset 0 0 0 2px currentColor;
      opacity: 0;
      //
      html.display-borders & {
        opacity: 0.2;
      }

      html.mode-dark & {
        $currentColor: $mode-dark-main;
        box-shadow: inset 0 0 0 2px currentColor;
        opacity: 0;
        //
        html.display-borders & {
          opacity: 0.2;
        }
      }
    }
  }

  &.-zigzag {
    $bg-color: rgba(0, 0, 0, 0.04);
    background-image: linear-gradient(135deg, $bg-color 25%, transparent 25%),
      linear-gradient(225deg, $bg-color 25%, transparent 25%),
      linear-gradient(45deg, $bg-color 25%, transparent 25%),
      linear-gradient(315deg, $bg-color 25%, transparent 25%);
    background-position: 2rem 0, 2rem 0, 0 0, 0 0;
    background-size: 4rem 4rem;
    background-repeat: repeat;
  }

  .c-form_item.has-error & {
    transform: none;
  }

  .-is-input & {
    background-color: $red;
    pointer-events: none;
    transform: translateY(-100%) rotateZ(-5deg);
    transform-origin: left bottom;
    transition: transform $speed * 2 $easing;

    opacity: 0.075;

    html.mode-dark & {
      opacity: 0.3;
    }
  }

  .-is-checkbox & {
    opacity: 0.15;

    html.mode-dark & {
      opacity: 0.4;
    }
  }

  .-is-dialog & {
    pointer-events: none;
  }

  .-is-error & {
    background-color: $red;
  }

  .-is-warning & {
    background-color: $red;
    opacity: 0.15;
  }
}

.c-form_item.has-error {
  @for $i from 1 through 5 {
    .-delay-#{$i} {
      transition-delay: 0.1s + 0.085 * $i;
    }
  }
}

.o-background-focus-wrap {
  width: 100%;
  height: 100%;
  position: absolute;
  top: auto;
  left: auto;
  z-index: -1;

  .o-background-focus {
    height: 100%;
    border-radius: 9999em;
    transform: scale(0);
    transition: transform $speed $easing;

    // background-color: $theme-main;
    box-shadow: inset 0 0 0 0.0625em $theme-main;

    html.mode-dark & {
      // background-color: $mode-dark-main;
      box-shadow: inset 0 0 0 0.0625em $mode-dark-main;
    }
  }
}
